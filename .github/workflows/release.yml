name: Release

on:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    env:
      PYLIBRB_VCPKG_ROOT: ${{ github.workspace }}/pylibrb_vcpkg

    steps:
    - name: Set min macOS version
      if: runner.os == 'macOS'
      run: |
        echo "MACOS_DEPLOYMENT_TARGET=10.14" >> $GITHUB_ENV

    - uses: actions/checkout@v4
      with:
        submodules: true

    # vcpkg
    - name: Setup vcpkg (it does not install any package yet)
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{ env.PYLIBRB_VCPKG_ROOT }}'

    - uses: pypa/cibuildwheel@v2.16.2
      env:
        CIBW_ARCHS_MACOS: x86_64 arm64 # Cross-compile on macOS

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl

  upload_all:
    name: Upload to PyPI
    needs: [build_wheels, build_sdist]
    environment: release
    runs-on: ubuntu-latest
    permissions:
      id-token: write # mandatory for trusted publishing on PyPI

    steps:
    - uses: actions/setup-python@v4
    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - name: Publish package distributions to PyPI 
      uses: pypa/gh-action-pypi-publish@release/v1
